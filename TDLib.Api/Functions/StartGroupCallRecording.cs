namespace TdLib
{
    using System.Threading.Tasks;

    using Newtonsoft.Json;

    /// <summary>Autogenerated TDLib APIs</summary>
    public static partial class TdApi
    {
        /// <summary>Starts recording of a group call. Requires groupCall.can_be_managed group call
        /// flag</summary>
        public static Task<Ok> StartGroupCallRecordingAsync(this Client client, int groupCallId = default, string title = default)
        {
            return client.ExecuteAsync(new StartGroupCallRecording { GroupCallId = groupCallId, Title = title });
        }

        /// <summary>Starts recording of a group call. Requires groupCall.can_be_managed group call
        /// flag</summary>
        public class StartGroupCallRecording : Function<Ok>
        {
            /// <summary>Data type for serialization</summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "startGroupCallRecording";

            /// <summary>Extra data attached to the function</summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>Group call identifier</summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("group_call_id")]
            public int GroupCallId { get; set; }

            /// <summary>Group call recording title; 0-64 characters</summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("title")]
            public string Title { get; set; }
        }
    }
}