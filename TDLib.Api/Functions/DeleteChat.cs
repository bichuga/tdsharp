namespace TdLib
{
    using System.Threading.Tasks;

    using Newtonsoft.Json;

    /// <summary>Autogenerated TDLib APIs</summary>
    public static partial class TdApi
    {
        /// <summary>Deletes a chat along with all messages in the corresponding chat for all chat
        /// members; requires owner privileges. For group chats this will release the username and
        /// remove all members. Chats with more than 1000 members can't be deleted using this method</summary>
        public static Task<Ok> DeleteChatAsync(this Client client, long chatId = default)
        {
            return client.ExecuteAsync(new DeleteChat { ChatId = chatId });
        }

        /// <summary>Deletes a chat along with all messages in the corresponding chat for all chat
        /// members; requires owner privileges. For group chats this will release the username and
        /// remove all members. Chats with more than 1000 members can't be deleted using this method</summary>
        public class DeleteChat : Function<Ok>
        {
            /// <summary>Data type for serialization</summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "deleteChat";

            /// <summary>Extra data attached to the function</summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>Chat identifier</summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("chat_id")]
            public long ChatId { get; set; }
        }
    }
}