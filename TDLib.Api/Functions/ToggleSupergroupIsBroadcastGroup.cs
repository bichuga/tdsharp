namespace TdLib
{
    using System.Threading.Tasks;

    using Newtonsoft.Json;

    /// <summary>Autogenerated TDLib APIs</summary>
    public static partial class TdApi
    {
        /// <summary>Upgrades supergroup to a broadcast group; requires owner privileges in the
        /// supergroup</summary>
        public static Task<Ok> ToggleSupergroupIsBroadcastGroupAsync(this Client client, int supergroupId = default)
        {
            return client.ExecuteAsync(new ToggleSupergroupIsBroadcastGroup { SupergroupId = supergroupId });
        }

        /// <summary>Upgrades supergroup to a broadcast group; requires owner privileges in the
        /// supergroup</summary>
        public class ToggleSupergroupIsBroadcastGroup : Function<Ok>
        {
            /// <summary>Data type for serialization</summary>
            [JsonProperty("@type")]
            public override string DataType { get; set; } = "toggleSupergroupIsBroadcastGroup";

            /// <summary>Extra data attached to the function</summary>
            [JsonProperty("@extra")]
            public override string Extra { get; set; }

            /// <summary>Identifier of the supergroup</summary>
            [JsonConverter(typeof(Converter))]
            [JsonProperty("supergroup_id")]
            public int SupergroupId { get; set; }
        }
    }
}